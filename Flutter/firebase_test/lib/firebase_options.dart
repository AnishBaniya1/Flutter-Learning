// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: dotenv.env[
        'APIKEY_WEB']!, //USE THIS IF YOU ARE SURE THAT  exists in the .env file, use ! to tell Dart that it's definitely not null
    appId: dotenv.env['APIID_WEB'] ??
        (throw Exception(
            'Missing APP_ID_WEB in .env')), //If you want an explicit error instead of defaulting to an empty string,
    messagingSenderId: dotenv.env['MESSAGINGSENDERID_WEB'] ??
        '', //This ensures your app doesn't crash, but if the API key is missing, Firebase may not work correctly.

    projectId: 'fir-test-a889f',
    authDomain: 'fir-test-a889f.firebaseapp.com',
    storageBucket: 'fir-test-a889f.firebasestorage.app',
    measurementId: 'G-NJTWPEBMKW',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyD8pgVDk-5AxoK0BrIXhlMEVSQvY1uWlIE',
    appId: '1:138366905355:android:a2457d15b8f3563272eb0e',
    messagingSenderId: '138366905355',
    projectId: 'fir-test-a889f',
    storageBucket: 'fir-test-a889f.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDwhK6klC5L_K1Ltl4sKFhPeAwtAxe0-2k',
    appId: '1:138366905355:ios:5c7da5f29540d06672eb0e',
    messagingSenderId: '138366905355',
    projectId: 'fir-test-a889f',
    storageBucket: 'fir-test-a889f.firebasestorage.app',
    iosBundleId: 'com.example.firebaseTest',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyDwhK6klC5L_K1Ltl4sKFhPeAwtAxe0-2k',
    appId: '1:138366905355:ios:5c7da5f29540d06672eb0e',
    messagingSenderId: '138366905355',
    projectId: 'fir-test-a889f',
    storageBucket: 'fir-test-a889f.firebasestorage.app',
    iosBundleId: 'com.example.firebaseTest',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyA-2B_wcsE1If3mla9aLWu_Youun-LJwIY',
    appId: '1:138366905355:web:dbe0121ec9fc4f3c72eb0e',
    messagingSenderId: '138366905355',
    projectId: 'fir-test-a889f',
    authDomain: 'fir-test-a889f.firebaseapp.com',
    storageBucket: 'fir-test-a889f.firebasestorage.app',
    measurementId: 'G-TP6HT17KH8',
  );
}
